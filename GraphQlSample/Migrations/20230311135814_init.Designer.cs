// <auto-generated />
using System;
using GraphQlSample.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQlSample.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230311135814_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQlSample.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a63a197-fdd5-4363-92b1-3790fde09e79"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("4ab9f5b3-c6d6-45cb-b7fa-ce99de796c41"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("b1dfa03b-45db-4d55-a5f6-28c1d0e3c528"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("9108242a-6732-428c-ac0d-e0ead41c41c0"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("c03ca861-5bc4-4071-bd8e-7d8424fc6b8c"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("9108242a-6732-428c-ac0d-e0ead41c41c0"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQlSample.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ab9f5b3-c6d6-45cb-b7fa-ce99de796c41"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("9108242a-6732-428c-ac0d-e0ead41c41c0"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQlSample.Entities.Account", b =>
                {
                    b.HasOne("GraphQlSample.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphQlSample.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
